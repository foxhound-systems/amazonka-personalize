{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveGeneric      #-}
{-# LANGUAGE OverloadedStrings  #-}
{-# LANGUAGE RecordWildCards    #-}
{-# LANGUAGE TypeFamilies       #-}

{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-binds   #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Network.AWS.AmazonPersonalizeEvents.PutEvents
-- Copyright   : (c) 2013-2018 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
--
-- Records user interaction event data. For more information see 'event-record-api' .
--
--
module Network.AWS.AmazonPersonalizeEvents.PutEvents
    (
    -- * Creating a Request
      putEvents
    , PutEvents
    -- * Request Lenses
    , peUserId
    , peTrackingId
    , peSessionId
    , peEventList

    -- * Destructuring the Response
    , putEventsResponse
    , PutEventsResponse
    ) where

import Network.AWS.AmazonPersonalizeEvents.Types
import Network.AWS.Lens
import Network.AWS.Prelude
import Network.AWS.Request
import Network.AWS.Response

-- | /See:/ 'putEvents' smart constructor.
data PutEvents = PutEvents'{_peUserId ::
                            !(Maybe Text),
                            _peTrackingId :: !Text, _peSessionId :: !Text,
                            _peEventList :: !(List1 Event)}
                   deriving (Eq, Read, Show, Data, Typeable, Generic)

-- | Creates a value of 'PutEvents' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'peUserId' - The user associated with the event.
--
-- * 'peTrackingId' - The tracking ID for the event. The ID is generated by a call to the <https://docs.aws.amazon.com/personalize/latest/dg/API_CreateEventTracker.html CreateEventTracker> API.
--
-- * 'peSessionId' - The session ID associated with the user's visit. Your application generates the sessionId when a user first visits your website or uses your application. Amazon Personalize uses the sessionId to associate events with the user before they log in. For more information see 'event-record-api' .
--
-- * 'peEventList' - A list of event data from the session.
putEvents
    :: Text -- ^ 'peTrackingId'
    -> Text -- ^ 'peSessionId'
    -> NonEmpty Event -- ^ 'peEventList'
    -> PutEvents
putEvents pTrackingId_ pSessionId_ pEventList_
  = PutEvents'{_peUserId = Nothing,
               _peTrackingId = pTrackingId_,
               _peSessionId = pSessionId_,
               _peEventList = _List1 # pEventList_}

-- | The user associated with the event.
peUserId :: Lens' PutEvents (Maybe Text)
peUserId = lens _peUserId (\ s a -> s{_peUserId = a})

-- | The tracking ID for the event. The ID is generated by a call to the <https://docs.aws.amazon.com/personalize/latest/dg/API_CreateEventTracker.html CreateEventTracker> API.
peTrackingId :: Lens' PutEvents Text
peTrackingId = lens _peTrackingId (\ s a -> s{_peTrackingId = a})

-- | The session ID associated with the user's visit. Your application generates the sessionId when a user first visits your website or uses your application. Amazon Personalize uses the sessionId to associate events with the user before they log in. For more information see 'event-record-api' .
peSessionId :: Lens' PutEvents Text
peSessionId = lens _peSessionId (\ s a -> s{_peSessionId = a})

-- | A list of event data from the session.
peEventList :: Lens' PutEvents (NonEmpty Event)
peEventList = lens _peEventList (\ s a -> s{_peEventList = a}) . _List1

instance AWSRequest PutEvents where
        type Rs PutEvents = PutEventsResponse
        request = postJSON amazonPersonalizeEvents
        response = receiveNull PutEventsResponse'

instance Hashable PutEvents where

instance NFData PutEvents where

instance ToHeaders PutEvents where
        toHeaders
          = const
              (mconcat
                 ["Content-Type" =#
                    ("application/x-amz-json-1.1" :: ByteString)])

instance ToJSON PutEvents where
        toJSON PutEvents'{..}
          = object
              (catMaybes
                 [("userId" .=) <$> _peUserId,
                  Just ("trackingId" .= _peTrackingId),
                  Just ("sessionId" .= _peSessionId),
                  Just ("eventList" .= _peEventList)])

instance ToPath PutEvents where
        toPath = const "/events"

instance ToQuery PutEvents where
        toQuery = const mempty

-- | /See:/ 'putEventsResponse' smart constructor.
data PutEventsResponse = PutEventsResponse'
                           deriving (Eq, Read, Show, Data, Typeable, Generic)

-- | Creates a value of 'PutEventsResponse' with the minimum fields required to make a request.
--
putEventsResponse
    :: PutEventsResponse
putEventsResponse = PutEventsResponse'

instance NFData PutEventsResponse where
