{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveGeneric      #-}
{-# LANGUAGE OverloadedStrings  #-}
{-# LANGUAGE RecordWildCards    #-}

{-# OPTIONS_GHC -fno-warn-unused-imports #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Network.AWS.AmazonPersonalize.Types.BatchInferenceJob
-- Copyright   : (c) 2013-2018 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay+amazonka@gmail.com>
-- Stability   : auto-generated
-- Portability : non-portable (GHC extensions)
--
module Network.AWS.AmazonPersonalize.Types.BatchInferenceJob where

import Network.AWS.AmazonPersonalize.Types.BatchInferenceJobConfig
import Network.AWS.AmazonPersonalize.Types.BatchInferenceJobInput
import Network.AWS.AmazonPersonalize.Types.BatchInferenceJobOutput
import Network.AWS.Lens
import Network.AWS.Prelude

-- | Contains information on a batch inference job.
--
--
--
-- /See:/ 'batchInferenceJob' smart constructor.
data BatchInferenceJob = BatchInferenceJob'{_bijFailureReason
                                            :: !(Maybe Text),
                                            _bijStatus :: !(Maybe Text),
                                            _bijJobOutput ::
                                            !(Maybe BatchInferenceJobOutput),
                                            _bijJobName :: !(Maybe Text),
                                            _bijLastUpdatedDateTime ::
                                            !(Maybe POSIX),
                                            _bijNumResults :: !(Maybe Int),
                                            _bijBatchInferenceJobConfig ::
                                            !(Maybe BatchInferenceJobConfig),
                                            _bijBatchInferenceJobARN ::
                                            !(Maybe Text),
                                            _bijFilterARN :: !(Maybe Text),
                                            _bijCreationDateTime ::
                                            !(Maybe POSIX),
                                            _bijSolutionVersionARN ::
                                            !(Maybe Text),
                                            _bijRoleARN :: !(Maybe Text),
                                            _bijJobInput ::
                                            !(Maybe BatchInferenceJobInput)}
                           deriving (Eq, Read, Show, Data, Typeable, Generic)

-- | Creates a value of 'BatchInferenceJob' with the minimum fields required to make a request.
--
-- Use one of the following lenses to modify other fields as desired:
--
-- * 'bijFailureReason' - If the batch inference job failed, the reason for the failure.
--
-- * 'bijStatus' - The status of the batch inference job. The status is one of the following values:     * PENDING     * IN PROGRESS     * ACTIVE     * CREATE FAILED
--
-- * 'bijJobOutput' - The Amazon S3 bucket that contains the output data generated by the batch inference job.
--
-- * 'bijJobName' - The name of the batch inference job.
--
-- * 'bijLastUpdatedDateTime' - The time at which the batch inference job was last updated.
--
-- * 'bijNumResults' - The number of recommendations generated by the batch inference job. This number includes the error messages generated for failed input records.
--
-- * 'bijBatchInferenceJobConfig' - A string to string map of the configuration details of a batch inference job.
--
-- * 'bijBatchInferenceJobARN' - The Amazon Resource Name (ARN) of the batch inference job.
--
-- * 'bijFilterARN' - The ARN of the filter used on the batch inference job.
--
-- * 'bijCreationDateTime' - The time at which the batch inference job was created.
--
-- * 'bijSolutionVersionARN' - The Amazon Resource Name (ARN) of the solution version from which the batch inference job was created.
--
-- * 'bijRoleARN' - The ARN of the Amazon Identity and Access Management (IAM) role that requested the batch inference job.
--
-- * 'bijJobInput' - The Amazon S3 path that leads to the input data used to generate the batch inference job.
batchInferenceJob
    :: BatchInferenceJob
batchInferenceJob
  = BatchInferenceJob'{_bijFailureReason = Nothing,
                       _bijStatus = Nothing, _bijJobOutput = Nothing,
                       _bijJobName = Nothing,
                       _bijLastUpdatedDateTime = Nothing,
                       _bijNumResults = Nothing,
                       _bijBatchInferenceJobConfig = Nothing,
                       _bijBatchInferenceJobARN = Nothing,
                       _bijFilterARN = Nothing,
                       _bijCreationDateTime = Nothing,
                       _bijSolutionVersionARN = Nothing,
                       _bijRoleARN = Nothing, _bijJobInput = Nothing}

-- | If the batch inference job failed, the reason for the failure.
bijFailureReason :: Lens' BatchInferenceJob (Maybe Text)
bijFailureReason = lens _bijFailureReason (\ s a -> s{_bijFailureReason = a})

-- | The status of the batch inference job. The status is one of the following values:     * PENDING     * IN PROGRESS     * ACTIVE     * CREATE FAILED
bijStatus :: Lens' BatchInferenceJob (Maybe Text)
bijStatus = lens _bijStatus (\ s a -> s{_bijStatus = a})

-- | The Amazon S3 bucket that contains the output data generated by the batch inference job.
bijJobOutput :: Lens' BatchInferenceJob (Maybe BatchInferenceJobOutput)
bijJobOutput = lens _bijJobOutput (\ s a -> s{_bijJobOutput = a})

-- | The name of the batch inference job.
bijJobName :: Lens' BatchInferenceJob (Maybe Text)
bijJobName = lens _bijJobName (\ s a -> s{_bijJobName = a})

-- | The time at which the batch inference job was last updated.
bijLastUpdatedDateTime :: Lens' BatchInferenceJob (Maybe UTCTime)
bijLastUpdatedDateTime = lens _bijLastUpdatedDateTime (\ s a -> s{_bijLastUpdatedDateTime = a}) . mapping _Time

-- | The number of recommendations generated by the batch inference job. This number includes the error messages generated for failed input records.
bijNumResults :: Lens' BatchInferenceJob (Maybe Int)
bijNumResults = lens _bijNumResults (\ s a -> s{_bijNumResults = a})

-- | A string to string map of the configuration details of a batch inference job.
bijBatchInferenceJobConfig :: Lens' BatchInferenceJob (Maybe BatchInferenceJobConfig)
bijBatchInferenceJobConfig = lens _bijBatchInferenceJobConfig (\ s a -> s{_bijBatchInferenceJobConfig = a})

-- | The Amazon Resource Name (ARN) of the batch inference job.
bijBatchInferenceJobARN :: Lens' BatchInferenceJob (Maybe Text)
bijBatchInferenceJobARN = lens _bijBatchInferenceJobARN (\ s a -> s{_bijBatchInferenceJobARN = a})

-- | The ARN of the filter used on the batch inference job.
bijFilterARN :: Lens' BatchInferenceJob (Maybe Text)
bijFilterARN = lens _bijFilterARN (\ s a -> s{_bijFilterARN = a})

-- | The time at which the batch inference job was created.
bijCreationDateTime :: Lens' BatchInferenceJob (Maybe UTCTime)
bijCreationDateTime = lens _bijCreationDateTime (\ s a -> s{_bijCreationDateTime = a}) . mapping _Time

-- | The Amazon Resource Name (ARN) of the solution version from which the batch inference job was created.
bijSolutionVersionARN :: Lens' BatchInferenceJob (Maybe Text)
bijSolutionVersionARN = lens _bijSolutionVersionARN (\ s a -> s{_bijSolutionVersionARN = a})

-- | The ARN of the Amazon Identity and Access Management (IAM) role that requested the batch inference job.
bijRoleARN :: Lens' BatchInferenceJob (Maybe Text)
bijRoleARN = lens _bijRoleARN (\ s a -> s{_bijRoleARN = a})

-- | The Amazon S3 path that leads to the input data used to generate the batch inference job.
bijJobInput :: Lens' BatchInferenceJob (Maybe BatchInferenceJobInput)
bijJobInput = lens _bijJobInput (\ s a -> s{_bijJobInput = a})

instance FromJSON BatchInferenceJob where
        parseJSON
          = withObject "BatchInferenceJob"
              (\ x ->
                 BatchInferenceJob' <$>
                   (x .:? "failureReason") <*> (x .:? "status") <*>
                     (x .:? "jobOutput")
                     <*> (x .:? "jobName")
                     <*> (x .:? "lastUpdatedDateTime")
                     <*> (x .:? "numResults")
                     <*> (x .:? "batchInferenceJobConfig")
                     <*> (x .:? "batchInferenceJobArn")
                     <*> (x .:? "filterArn")
                     <*> (x .:? "creationDateTime")
                     <*> (x .:? "solutionVersionArn")
                     <*> (x .:? "roleArn")
                     <*> (x .:? "jobInput"))

instance Hashable BatchInferenceJob where

instance NFData BatchInferenceJob where
